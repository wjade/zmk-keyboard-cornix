/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/reset.h>
#include "zmk-helpers/helper.h"
#include "includes/cornix54.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// tap windows for ctl alt and gui

#define HM_TAPPING_TERM 250
#define HM_TAPPING_REPEAT 210

// quick tapping for shift

#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 70
#define BASE 0
#define WIN 1
#define LOWER 2
#define RAISE 3
#define ADJUST 4
#define NAVI   5
#define NUM    6
#define DEBUG  7

// Layer aliases for Wings compatibility
#define WINGS_LOWER 1

// https://github.com/urob/zmk-config/tree/main#timeless-homerow-mods

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH1 LH0 RH0 RH1
#define KEYS_T LH1 LH0 RH0 RH1
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        p: p {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N3 &kp N0 &kp N5 &kp N4 &kp N6 &kp ENTER>;
            label = "P";
        };
    };

    // Activate ADJUST layer by pressing raise and lower

    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };

        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.

        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            //flavor = "balanced";

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;

            // for quick tapping; shift+~

            hold-trigger-on-release;
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };

        mt_fast: mt_fast {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_FAST";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };

        homerow_mod: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
        };

        shiftsnapshot: shiftsnapshot {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTSNAPSHOT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp LS(RG(NUMBER_4))>;
        };

        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            flavor = "hold-preferred";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <3 2>;
            then-layer = <4>;
        };

        c1 {
            if-layers = <0 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_settings_reset {
            timeout-ms = <50>;
            key-positions = <LT5 RT5>; // ESC + BSPC keys equivalent
            bindings = <&sys_reset>;
            layers = <1>; // Wings lower layer
        };

        combo_bootloader {
            timeout-ms = <50>;
            key-positions = <RT4 RT5>; // 0 + BSPC keys (top right corner)
            bindings = <&bootloader>;
            layers = <1>; // Wings lower layer
        };

        Copy {
            bindings = <&kp RG(C)>;
            key-positions = <LB2 LB1>;
        };

        Paste {
            bindings = <&kp RG(V)>;
            key-positions = <LB1 LB0>;
        };

        ctrl-a {
            bindings = <&kp RG(A)>;
            key-positions = <LM4 LM3>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <RB1 RB2>;
        };

        cb_ltm {
            bindings = <&kp ESC>;
            key-positions = <LT3 LT1>;
            layers = <0 1>;
        };

        cb_lm {
            bindings = <&kp TAB>;
            key-positions = <LM3 LM1>;
            layers = <0 1>;
        };

        cb_enter {
            bindings = <&kp RET>;
            key-positions = <RB2 RB0>;
            layers = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  | BSPC |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  \   |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //        | ALT | CTL | GUI | LWR | SPC |   | ENT | RSE  | BSPC| DEL | ALT |

            bindings = <
&kp ESC         &kp N1                &kp N2                 &kp N3                &kp N4                &kp N5     &kp N6                     &kp N7                      &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB         &kp Q                 &kp W                  &kp E                 &kp R                 &kp T      &kp Y                      &kp U                       &kp I      &kp O    &kp P     &kp BACKSPACE
&kp LA(LCTRL)   &homerow_mod RG(A) A  &lt 3 S                &lt 2 D               &lt 1 F               &kp G      &kp H                      &lt 1 J                     &lt 2 K    &lt 3 L  &kp SEMI  &kp SQT
&shiftsnapshot  &kp Z                 &homerow_mod RG(X) X   &homerow_mod RG(C) C  &homerow_mod RG(V) V  &kp B      &kp N                      &kp M                       &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
&none           &kp TAB               &mt_fast LSHIFT ENTER  &kp LGUI              &mo 1                 &kp SPACE  &mt_fast RIGHT_GUI ESCAPE  &mt_fast RIGHT_SHIFT SPACE  &kp SPACE  &kp DEL  &kp RALT  &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        win_layer {
            display-name = "Windows";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&trans    &trans         &trans        &trans         &trans               &trans                  &trans  &trans               &trans         &trans        &trans            &trans
&trans    &hm_l LCTRL A  &hm_l LALT S  &hm_l LCTRL D  &hm_shift_l LSHFT F  &trans                  &trans  &hm_shift_r RSHFT J  &hm_r RCTRL K  &hm_r RALT L  &hm_r RCTRL SEMI  &trans
&kp LGUI  &trans         &trans        &trans         &trans               &trans  &trans  &trans  &trans  &trans               &trans         &trans        &trans            &trans
&none     &none          &none         &trans         &trans               &trans                  &trans  &trans               &trans         &none         &none             &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            display-name = "Lower";

            // -----------------------------------------------------------------------------------------
            // |  `   |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11  |
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | F12  |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT | LBKT| GRAVE|
            // | SHFT |     |     | PREV| NEXT| PLAY|   | HOME| END | PGUP| PGDN| BSLH|      |
            //        | ALT | CTL | GUI |     | SPC |   | ENT |     | BSPC| DEL | ALT |

            bindings = <
&kp GRAVE   &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6    &kp F7    &kp F8       &kp F9         &kp F10   &kp F11
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5        &kp N6    &kp N7    &kp N8       &kp N9         &kp N0    &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp LEFT  &kp DOWN  &kp UP       &kp RIGHT      &kp LBKT  &kp GRAVE
&kp LSHFT   &trans        &trans        &kp C_PREV    &kp C_NEXT    &kp C_PP      &kp HOME  &kp END   &kp PAGE_UP  &kp PAGE_DOWN  &kp BSLH  &trans
&none       &kp LALT      &kp LCTRL     &kp LGUI      &trans        &kp SPACE     &kp RET   &trans    &kp BSPC     &kp DEL        &kp RALT  &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            display-name = "Raise";

            // -----------------------------------------------------------------------------------------
            // |  ~   |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // |  TAB |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |     |      |
            // | CTRL |     |     |     |     |     |   |  _  |  +  |  {  |  }  |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     | DIV |      |
            //        | ALT | CTL | GUI |     | SPC |   | ENT |     | BSPC| DEL | ALT |

            bindings = <
&kp TILDE  &kp EXCL         &kp AT       &kp HASH  &kp DLLR    &kp PRCNT    &kp CARET       &kp AMPS       &kp ASTRK         &kp LPAR              &kp RPAR               &kp BSPC
&kp TAB    &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp LCTRL  &trans           &trans       &trans    &trans      &trans       &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp TILDE              &kp GRAVE
&kp LSHFT  &trans           &trans       &trans    &trans      &trans       &kp UNDERSCORE  &kp PLUS       &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp KP_DIVIDE          &trans
&none      &kp LCTRL        &kp LGUI     &trans    &kp SPACE   &trans       &trans          &kp BSPC       &kp DEL           &kp RALT              &trans                 &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        layer_3 {
            display-name = "Layer3";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&none   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Adjust_layer {
            display-name = "Adjust";

            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | moDEBUG| RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            bindings = <
&bt BT_CLR      &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                   &none   &none  &none   &none  &none             &none
&none           &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4                  &tog 1  &to 0  &none   &none  &none             &tog 1
&bt BT_CLR_ALL  &none          &none          &none          &none          &none          &trans  &trans  &none   &none  &none   &none  &ext_power EP_ON  &kp CAPSLOCK
&none           &none          &none          &none          &none          &none                          &none   &none  &kp N4  &none  &none             &none
            >;
        };

        Navi_layer {
            display-name = "Navi";
            bindings = <
&none  &none  &none           &mmv MOVE_UP    &kp PAGE_UP      &kp PAGE_DOWN                   &mkp MB1  &mkp MB3  &mkp MB2  &msc SCRL_UP  &msc SCRL_DOWN  &none
&none  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_UP                    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT     &none           &none
&none  &none  &none           &none           &none            &msc SCRL_DOWN  &trans  &trans  &trans    &trans    &none     &none         &none           &none
&none  &none  &none           &mo 7           &trans           &trans                          &none     &none     &kp N5    &none         &none           &none
            >;
        };

        KeyPad_layer {
            display-name = "NumPad";
            bindings = <
&mo 7  &none  &none  &none  &none  &none                  &kp KP_N7        &kp KP_N8        &kp KP_N9        &kp KP_MINUS  &kp KP_MULTIPLY  &none
&none  &none  &none  &none  &none  &none                  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_N6        &kp KP_PLUS   &kp KP_DIVIDE    &none
&none  &none  &none  &none  &none  &none  &trans  &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_N3        &none         &none            &none
&none  &none  &none  &none  &none  &mo 7                  &kp KP_N0        &kp KP_DOT       &kp KP_NUMBER_0  &none         &none            &none
            >;
        };

        Debug_layer {
            display-name = "Debug";

            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | BTCLR | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none        &none  &none   &none  &none  &none
&none       &none         &none         &none         &none         &none                         &none        &none  &none   &none  &none  &none
&none       &none         &none         &none         &none         &bootloader   &trans  &trans  &bootloader  &none  &none   &none  &none  &none
&none       &none         &none         &none         &none         &none                         &none        &none  &kp N7  &none  &none  &none
            >;
        };
    };
};

